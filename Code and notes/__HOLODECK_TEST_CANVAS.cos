enum 1 1 64731
	kill targ
next



*scrx 1 1 64731 76
*scrx 1 1 64731 75
*scrx 1 1 64731 77
*scrx 1 1 64731 9





*OV01 CONTROLS BRUSH/COLOUR! (at the moment)

new: simp 1 1 64731 "holodeck_frame" 0 0 5000

tick 1

*use sprite dimensions as bounding box. because most of it is transparent.
tran 0 0

*ov00 is set to 0 when the mouse is NOT pressed down.
setv ov00 0



*Listen for these events:
* 8 Raw Mouse Down + 16 Raw Mouse Up
imsk 24
* + 4 Raw Mouse Move
imsk 28

mvto 177 90253



*RAW MOUSE DOWN SCRIPT

*ov00 is set to 1 when the mouse is pressed down.

scrp 1 1 64731 76

*1 - left mouse button
	doif _p1_ = 1
		setv ov00 1
	endi

endm

*RAW MOUSE UP SCRIPT

*ov00 is set to 0 when the mouse is NOT pressed down.

scrp 1 1 64731 77

	setv ov00 0

*right mouse button (currently disabled)
	doif _p1_ = 2


		inst
*		enum 1 1 64732
*			kill targ
*		next

	endi

endm

*TIMER SCRIPT (works a little better than 75, raw mouse move)

scrp 1 1 64731 9

*vtos, variable to string :)
*	sets va50 vtos _P1_

*	targ norn
*	sezz va50

*X and Y of the frame object are subtracted from raw mouse position to get the correct one.
*never mind.




*get canvas bounds and store them in va00, va01, va02 and va03

	inst

	setv va00 posl
	setv va01 post

	setv va02 va00
	setv va03 va01

*todo: possibly store width and height as OVs
	addv va02 128
	addv va03 128

	targ pntr

	setv va04 posl
	setv va05 post

	targ ownr

*
	doif ov00 = 1 and va04 > va00 and va04 < va02 and va05 > va01 and va05 < va03

*		targ pntr
*		setv va98 posl
*		setv va99 post
*
*		targ ownr
*
**	subv va98 177
**	subv va99 90253
*
*
**	vtos, variable to string :)
**	sets va50 vtos va99
**	targ norn
**	sezz va50
*
*
*
**va96 and 97 are same as X/Y but +1 so it doesn't delete the drawing.
*
**		setv va96 va98
**		setv va97 va99
*
**		addv va96 1
**		addv va97 1
*
*		doif ov50 = va98
*			addv ov50 1
*		endi
*
*		doif ov51 = va99
*			addv ov51 1
*		endi
*
**draw a line from "195, 90292" to "270, 90336", coloured bright RED (255 0 0). Line is SOLID (0 0)
*		line va98 va99 ov50 ov51 255 0 0 0 0
**	line 195 90292 270 90336 255 0 0 0 0
*
*
*		targ pntr
**remember previous brush position for a line.
*		setv va00 posl
*		setv va01 post
*
**		addv va00 1
**		addv va01 1
*		targ ownr
*
*		setv ov50 va00
*		setv ov51 va01


		targ pntr


		setv va98 posl
		setv va99 post

		targ ownr

*ov01 is selected brush/colour (maybe just colour eventually)
		new: simp 1 1 64732 "printshop brushes" 0 ov01 5000
		mvto va98 va99

	endi

endm



*X and Y of the frame object. will need to be subtracted from pntr position.
*setv va98 177
*setv va99 90253
*
*targ pntr
*
*setv va00 posx
*setv va01 posy




*draw a line from "195, 90292" to "270, 90336", coloured bright RED (255 0 0). Line is SOLID (0 0)
*line 195 90292 270 90336 255 0 0 0 0