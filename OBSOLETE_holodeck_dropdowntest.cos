setv game "holodeck_activate1_SoundIndex" 0

setv game "holodeck_dropdown_NumEntriesToDisplay" 14

*read file - slow and not needed, but could be an advanced option.
*reaf











*Create Dropdown Script! (UNCOMMENT THIS LINE ASAP)
scrp 1 1 64735 9990

*kill any existing dropdowns, only one can be open at a time
enum 1 1 55555
	kill targ
next


new: comp 1 1 55555 "blnk" 0 0 10


*Listen for these events:
* 8 Raw Mouse Down + 16 Raw Mouse Up
*imsk 24
* + 4 Raw Mouse Move
imsk 28

setv ov00 574
setv ov01 90103

*variable sent to us in the script that called us.
mvto OV00 OV01


*how many sounds are there?
setv va00 rean "holodeck_sounds"

*variable to keep track of what iteration of the loop we're on
setv va99 1



*for (how many dropdown entries to display at a time)
reps game "holodeck_dropdown_NumEntriesToDisplay"


*VA33 is the background sprite for the part of the menu we are drawing.
*The first one has a shadow on the top, the last one has a highlight on the bottom.
	doif va99 = 1

		setv VA33 2

	elif va99 = game "holodeck_dropdown_NumEntriesToDisplay"

		setv VA33 6

	else

		setv VA33 4

	endi



*subtract 1 from loop iteration so we load the correct catalogue entry.
	setv va70 va99
	subv va70 1

*load the current sound into VA01
	sets va01 read "holodeck_sounds" va70

*convert it to uppercase  (never mind)

*	sets va01 uppa va01

*multiply the loop iteration by the height of the back-piece (-1) to get the position for the next one
	setv va80 va99
	subv va80 1
*todo: must be a variable!!
	mulv va80 21


*VA33 is the background sprite for the part of the menu we are drawing.
*The first one has a shadow on the top, the last one has a highlight on the bottom.

*create the next item in the list
	pat: fixd va99 "holodeck_dropdown" VA33 0 va80 1 "WhiteOnTransparentChars"

	part va99

*set the sound as the text for the new part.
	ptxt va01

*add 1 to iteration variable
	addv va99 1

repe

*endm

endm









***OLD UNFINISHED SNIPPET TO DELETE ALL LIST ENTRIES INDIVIDUALLY.

*scrp
*
**delete all dropdown entries
**	reps game "holodeck_dropdown_NumEntriesToDisplay"
*
**loop
*
**destroy the current part
*pat: kill va00
*
**add 1 to loop iteration
*addv va00 1
*
**keep looping until there is no Next Part!
*untl pnxt va00 = 0
*
*endm




*sets va00 vtos va00

*adds va00 " sounds. first one is "
*adds va00 va01

*targ norn












*TODO: IT SHOULD BE CHECKING IF IT'S IN THE BOUNDS OF THE CANVAS HERE TOO!

*RAW MOUSE DOWN SCRIPT

*ov00 is set to 1 when the mouse is pressed down.

scrp 1 1 55555 76

*1 - left mouse button
	doif _p1_ = 1
		setv ov00 1
	endi

endm

*RAW MOUSE UP SCRIPT

*ov00 is set to 0 when the mouse is NOT pressed down.

scrp 1 1 55555 77

	setv ov00 0

*right mouse button (currently disabled)
	doif _p1_ = 2


		inst
*		enum 1 1 64732
*			kill targ
*		next

	endi

endm





*RAW MOUSE MOVE SCRIPT

scrp 1 1 55555 75

*if 5 = 5

*see if there's a valid part under the cursor
	setv va00 hotp
	doif va00 <> 0 and va00 <> -1

*	count from 1...
		setv va01 1

		inst
		reps game "holodeck_dropdown_NumEntriesToDisplay"
			part va01
			pose 0
			addv va01 1
		repe

		part va00
		pose 1
	endi
*endi



*VA50 - check what part we hovered over last frame
*	doif VA50 <> 0 and VA50 <> -1 and VA50 <> hotp
*		part va50
*		pose 0
*	else
*		part hotp
*		pose 1
*	endi

*	doif hotp <> -1
*		part hotp
*		pose 1
*	else

*endi


*VA50 - store what part we hovered over last frame
	setv VA50 hotp

*	set this to 5

endm

*to 11... so still 10.
*	setv va01 game "holodeck_dropdown_NumEntriesToDisplay"
*	subv va01 1

**delete all dropdown entries
*	inst
*	reps game "holodeck_dropdown_NumEntriesToDisplay"
*
*		doif hotp = va00
*			part va00
*			pose 1
*		else
*			targ norn
*			sezz "Fowo"
*
*			targ ownr
*			part va00
**	turn off every other part
*			pose 0
*
*		endi
*
*		addv va00 1
*	repe



*highlight the part we are hovering over
*
**make sure there is a part under our cursor.
**	doif hotp <> -1
**		pose 1
*
**	loop
*
*repe 
*
**if the part under our cursor is the part we are iterating over
*		doif hotp = part va00
*			part va00
*			pose 1
*		else
*			part va00
**	turn off every other part
*			pose 0
*
*		endi
*
**	add 1 to loop iteration
*		subv va00 1
*
*
*
*
*
*
*
*
*
*
**targ hotp




*sezz va00